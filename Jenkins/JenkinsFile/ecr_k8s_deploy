pipeline{

      // agent any	
    agent { label "#####"}
    
     environment {
     
        AWS_ACCOUNT_ID="######"
        AWS_DEFAULT_REGION="#####"
        IMAGE_NAME="######"
        IMAGE_TAG="${currentBuild.number}"
        //IMAGE_TAG="staticvalue"
        REPOSITORY_URI = "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_NAME}:${IMAGE_TAG}"
        
                }
    
    stages {
        
        stage("Cloning git repository"){
            steps{
                git branch: '#######', credentialsId: 'git_credentials', url: '############'
            }
        }    
        stage("Build jar file using maven"){
            steps{
               sh "mvn clean install"
            }    
        }
        
        stage("Build docker image") {
            steps{
                script {
                    dockerImage = docker.build "${IMAGE_NAME}:${IMAGE_TAG}"
                }
            }
        }
   
    // Uploading Docker images into AWS ECR
    stage("Logging into AWS ECR and push docker image") {
     steps{  
         script {
                sh "aws ecr get-login-password --region ${AWS_DEFAULT_REGION} | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com"
                sh "docker tag ${IMAGE_NAME}:${IMAGE_TAG} ${REPOSITORY_URI}"
                sh "docker push ${REPOSITORY_URI}"
            }
        }
     }  
     
     stage("Deploy application on K8's cluster") {
     steps{  
         script {
                sh "kubectl apply -f eks-deployment.yaml"
            }
        }
     }  
     
     stage("Re-deploy application on K8's cluster with new code changes"){
            steps{
                withKubeConfig(caCertificate: '', clusterName: '', contextName: '', credentialsId: 'k8s_credentials', namespace: '', serverUrl: '') {
                 sh "kustomize edit set image 703550360617.dkr.ecr.ap-south-1.amazonaws.com/batch9:latest=703550360617.dkr.ecr.ap-south-1.amazonaws.com/batch9:${IMAGE_TAG}"    
                 sh "kustomize build ."
                 sh "kubectl delete -f eks-deployment.yaml && kubectl create --kustomize ."   
                 }
            }
        }
    }
    
}  
